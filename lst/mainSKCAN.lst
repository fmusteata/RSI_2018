C51 COMPILER V8.02   MAINSKCAN                                                             11/27/2018 18:28:33 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE MAINSKCAN
OBJECT MODULE PLACED IN .\obj\mainSKCAN.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE mainSKCAN.c LARGE OPTIMIZE(9,SPEED) BROWSE ORDER INCDIR(..\MCO;..\SKCAN\Inc
                    -lude) DEBUG OBJECTEXTEND PRINT(.\lst\mainSKCAN.lst) OBJECT(.\obj\mainSKCAN.obj)

line level    source

   1          /**************************************************************************
   2          MODULE:    MAIN
   3          CONTAINS:  Example application using MicroCANopen
   4                     Written for MicroPac C515C board
   5          COPYRIGHT: Embedded Systems Academy, Inc. 2002 - 2003
   6                     All rights reserved. www.microcanopen.com
   7                     This software was written in accordance to the guidelines at
   8                             www.esacademy.com/software/softwarestyleguide.pdf
   9          DISCLAIM:  Read and understand our disclaimer before using this code!
  10                     www.esacademy.com/disclaim.htm
  11          LICENSE:   Users that have purchased a license for PCANopenMagic
  12                     (www.esacademy.com/software/pcanopenmagic)
  13                     may use this code in commercial projects.
  14                     Otherwise only educational use is acceptable.
  15          VERSION:   1.20, Pf/Aa/Ck/DM 13-OCT-03
  16                           $LastChangedDate: 2016-10-01 $
  17                     $LastChangedRevision: 232 $
  18          ***************************************************************************/ 
  19          
  20          #include <mco.h>
  21          #include "rskcanio.h"
  22          #include <reg515C.h>   // Pentru Keil
  23          #include <mcohwskcan.h>
  24          
  25          /*OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO*/
  26          #include <lcd.h>
  27          
  28          /*OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO*/
  29          
  30          // declaratie externa pentru tabelul cu imaginea procesului
  31          extern UNSIGNED8 MEM_NEAR gProcImg[];
  32          
  33          /**************************************************************************
  34          DOES:    Functia main
  35          RETURNS: nimic
  36          **************************************************************************/
  37          void main
  38            (
  39            void
  40            )
  41          {       
  42   1      
  43   1      /*OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO*/
  44   1              // Reseteaza/Initializeaza SK-CAN
  45   1              LCD_vInit();
  46   1              LCD_vDisplayString("Init SKCAN - Done");
  47   1      
  48   1              MCOHW_Init(125);
  49   1      /*OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO*/
  50   1              
  51   1              // Reseteaza/Initializeaza communicatia CANopen
  52   1              MCOUSER_ResetCommunication();
  53   1              LCD_vDisplayString("Init MCO - Done");
  54   1                      
C51 COMPILER V8.02   MAINSKCAN                                                             11/27/2018 18:28:33 PAGE 2   

  55   1          // Valideaza intreruperile
  56   1                             
  57   1      
  58   1      
  59   1          EAL = 1;
  60   1      
  61   1              // Bucla infinita
  62   1              while(1)
  63   1              {
  64   2              // Actualizeaza datele de proces
  65   2              // Primele intrari numerice sunt citite de la switch-uri
  66   2                      //    gProcImg[IN_digi_1] = read_dip_switches();
  67   2      
  68   2              // Comanda primele iesiri digitale (pe led-uri)
  69   2                      //   switch_leds(gProcImg[OUT_digi_1]); 
  70   2      
  71   2              /*trimite in ecou toate celelalte valori de la intrare la iesire
  72   2              
  73   2                  // digitale
  74   2                  gProcImg[IN_digi_2] = gProcImg[OUT_digi_2];
  75   2                  gProcImg[IN_digi_3] = gProcImg[OUT_digi_3];
  76   2                  gProcImg[IN_digi_4] = gProcImg[OUT_digi_4];
  77   2              
  78   2                  // analogice
  79   2                  gProcImg[IN_ana_1]   = gProcImg[OUT_ana_1];
  80   2                  gProcImg[IN_ana_1+1] = gProcImg[OUT_ana_1+1];
  81   2                  gProcImg[IN_ana_2]   = gProcImg[OUT_ana_2];
  82   2                  gProcImg[IN_ana_2+1] = gProcImg[OUT_ana_2+1];       */
  83   2              
  84   2                  // Lanseaza prelucarea specifica retelei CANOpen
  85   2                  MCO_ProcessStack();
  86   2      
  87   2              } // end of while(1)
  88   1      } // end of main
  89          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     38    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
